name: Convert to ico
on:
  workflow_dispatch:
    branches: [main]

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: svg

      - name: Checkout ico repo
        uses: actions/checkout@v2
        with:
          path: ico
          token: ${{ secrets.ACTION_TOKEN }}
          repository: icon11-community/Folder11-ico

      - name: Convert
        run: |
          svg_repo="./svg"
          ico_repo="./ico"
          input_path="$svg_repo/svg"
          output_path="$ico_repo/ico"
          output_hash_path="$ico_repo/hash"
          temp_path="./temp"
          changed=false

          install_dependencies() {
            if [[ "$changed" != "true" ]]; then
              npm i -g svgexport
            fi
          }

          mkdir -p "$temp_path"
          mkdir -p "$input_path"
          mkdir -p "$output_path"
          mkdir -p "$output_hash_path"

          for i in $(ls "$input_path" | grep '\.svg$'); do
            name="$(echo $i | sed -E 's/^(.+)\.svg$/\1/')"
            hash="$(git -C "$svg_repo" hash-object ".github/workflows/convert.yml")"

            input_name="$input_path/$name.svg"
            temp_name="$temp_path/$name.png"
            output_name="$output_path/$name.ico"
            output_hash_name="$output_hash_path/$name.ico"

            echo "Checking $name..."

            if [[ -f "$output_name" && -f "$output_hash_name" && "$hash" == "$(cat $output_hash_name)" ]]; then
              echo "$name is already exist."
              continue
            fi
            
            install_dependencies
            changed=true

            [[ -f "$output_name" ]] && rm "$output_name"
            [[ -f "$output_hash_name" ]] && rm "$output_hash_name"

            svgexport "$input_name" "$temp_name" png 1024:1024
            convert -background transparent "$temp_name" -define icon:auto-resize="256,128,96,64,48,32,16" "$output_name"
            
            echo "$hash" > "$output_hash_name"
            echo "$name successfully converted."
          done

          for ico_file in $(ls "$output_path" | grep '\.ico$'); do
            name="$(echo $ico_file | sed -E 's/^(.+)\.ico$/\1/')"
            input_name="$input_path/$name.svg"
            
            if [[ ! -f "$input_name" ]]; then
              echo "Removing $name..."
              rm -f "$output_path/$name.ico"
              rm -f "$output_hash_path/$name.ico"
            fi
          done

          echo "Cleaning temp..."
          rm -rf "$temp_path"

          if [[ "$changed" == 'true' ]]; then
            echo "Push changes...."
            commit_name="gen: $(git -C "$svg_repo" log -1 --pretty=format:'%h')"
            git -C "$ico_repo" config user.name github-actions
            git -C "$ico_repo" config user.email github-actions@github.com
            git -C "$ico_repo" add .
            git -C "$ico_repo" commit -m "$commit_name"
            git -C "$ico_repo" push
          fi
